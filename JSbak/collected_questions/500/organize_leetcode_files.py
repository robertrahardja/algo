import os
import shutil
import re
from collections import defaultdict

# Dictionary mapping problem numbers to their primary data structure/algorithm
problem_to_ds = {
    # 1-100
    9: "Math",
    10: "DynamicProgramming",
    11: "TwoPointers", 
    12: "HashTable",
    13: "HashTable",
    14: "String",
    15: "TwoPointers",
    16: "TwoPointers",
    17: "Recursion",
    18: "TwoPointers",
    19: "LinkedList",
    20: "Stack",
    21: "LinkedList",
    22: "Backtracking",
    23: "Heap",
    24: "LinkedList",
    25: "LinkedList",
    26: "TwoPointers",
    27: "TwoPointers",
    28: "String",
    29: "BitManipulation",
    30: "SlidingWindow",
    31: "Array",
    32: "DynamicProgramming",
    33: "BinarySearch",
    34: "BinarySearch",
    35: "BinarySearch",
    36: "HashTable",
    37: "Backtracking",
    38: "String",
    39: "Backtracking",
    40: "Backtracking",
    41: "Array",
    42: "TwoPointers",
    43: "Math",
    44: "DynamicProgramming",
    45: "Greedy",
    46: "Backtracking",
    47: "Backtracking",
    48: "Matrix",
    49: "HashTable",
    50: "Math",
    51: "Backtracking",
    52: "Backtracking",
    53: "DynamicProgramming",
    54: "Matrix",
    55: "Greedy",
    56: "Intervals",
    57: "Intervals",
    58: "String",
    59: "Matrix",
    60: "Math",
    61: "LinkedList",
    62: "DynamicProgramming",
    63: "DynamicProgramming",
    64: "DynamicProgramming",
    65: "String",
    66: "Array",
    67: "Math",
    68: "String",
    69: "BinarySearch",
    70: "DynamicProgramming",
    71: "Stack",
    72: "DynamicProgramming",
    73: "Matrix",
    74: "BinarySearch",
    75: "TwoPointers",
    77: "Backtracking",
    78: "Backtracking",
    79: "Backtracking",
    80: "TwoPointers",
    81: "BinarySearch",
    82: "LinkedList",
    83: "LinkedList",
    84: "Stack",
    85: "DynamicProgramming",
    86: "LinkedList",
    87: "DynamicProgramming",
    88: "TwoPointers",
    89: "BitManipulation",
    90: "Backtracking",
    91: "DynamicProgramming",
    92: "LinkedList",
    93: "Backtracking",
    94: "Tree",
    95: "Tree",
    96: "DynamicProgramming",
    97: "DynamicProgramming",
    98: "Tree",
    99: "Tree",
    100: "Tree",
    
    # 101-200
    101: "Tree",
    102: "Tree",
    103: "Tree",
    104: "Tree",
    105: "Tree",
    106: "Tree",
    107: "Tree",
    108: "Tree",
    109: "Tree",
    110: "Tree",
    111: "Tree",
    112: "Tree",
    113: "Tree",
    114: "Tree",
    115: "DynamicProgramming",
    116: "Tree",
    117: "Tree",
    118: "Array",
    119: "Array",
    120: "DynamicProgramming",
    121: "DynamicProgramming",
    122: "Greedy",
    123: "DynamicProgramming",
    124: "Tree",
    125: "TwoPointers",
    126: "Graph",
    127: "Graph",
    128: "HashTable",
    129: "Tree",
    130: "DFS",
    131: "Backtracking",
    132: "DynamicProgramming",
    133: "Graph",
    134: "Greedy",
    135: "Greedy",
    136: "BitManipulation",
    137: "BitManipulation",
    138: "LinkedList",
    139: "DynamicProgramming",
    140: "DynamicProgramming",
    141: "LinkedList",
    142: "LinkedList",
    143: "LinkedList",
    144: "Tree",
    145: "Tree",
    146: "Design",
    147: "LinkedList",
    148: "LinkedList",
    149: "Math",
    150: "Stack",
    151: "String",
    152: "DynamicProgramming",
    153: "BinarySearch",
    154: "BinarySearch",
    155: "Design",
    156: "Tree",
    157: "String",
    158: "Design",
    159: "SlidingWindow",
    160: "LinkedList",
    161: "String",
    162: "BinarySearch",
    163: "Array",
    164: "Sorting",
    165: "String",
    166: "Math",
    167: "TwoPointers",
    168: "Math",
    169: "Array",
    170: "Design",
    171: "Math",
    172: "Math",
    173: "Tree",
    174: "DynamicProgramming",
    175: "SQL",
    176: "SQL",
    177: "SQL",
    178: "SQL",
    179: "String",
    180: "SQL",
    181: "SQL",
    182: "SQL",
    183: "SQL",
    184: "SQL",
    185: "SQL",
    186: "String",
    187: "HashTable",
    188: "DynamicProgramming",
    189: "Array",
    190: "BitManipulation",
    191: "BitManipulation",
    192: "Shell",
    193: "Shell",
    194: "Shell",
    195: "Shell",
    196: "SQL",
    197: "SQL",
    198: "DynamicProgramming",
    199: "Tree",
    200: "DFS",
    
    # 201-300
    201: "BitManipulation",
    202: "HashTable",
    203: "LinkedList",
    204: "Math",
    205: "HashTable",
    206: "LinkedList",
    207: "Graph",
    208: "Trie",
    209: "TwoPointers",
    210: "Graph",
    211: "Trie",
    212: "Trie",
    213: "DynamicProgramming",
    214: "String",
    215: "Heap",
    216: "Backtracking",
    217: "HashTable",
    218: "SweepLine",
    219: "HashTable",
    220: "OrderedSet",
    221: "DynamicProgramming",
    222: "Tree",
    223: "Math",
    224: "Stack",
    225: "Queue",
    226: "Tree",
    227: "Stack",
    228: "Array",
    229: "Array",
    230: "Tree",
    231: "BitManipulation",
    232: "Stack",
    233: "Math",
    234: "LinkedList",
    235: "Tree",
    236: "Tree",
    237: "LinkedList",
    238: "Array",
    239: "SlidingWindow",
    240: "BinarySearch",
    241: "DivideAndConquer",
    242: "HashTable",
    243: "Array",
    244: "HashTable",
    245: "Array",
    246: "HashTable",
    247: "Recursion",
    248: "Recursion",
    249: "HashTable",
    250: "Tree",
    251: "Design",
    252: "Sorting",
    253: "Heap",
    254: "Backtracking",
    255: "Stack",
    256: "DynamicProgramming",
    257: "Tree",
    258: "Math",
    259: "TwoPointers",
    260: "BitManipulation",
    261: "Graph",
    262: "SQL",
    263: "Math",
    264: "DynamicProgramming",
    265: "DynamicProgramming",
    266: "HashTable",
    267: "Backtracking",
    268: "Math",
    269: "Graph",
    270: "Tree",
    271: "String",
    272: "Tree",
    273: "String",
    274: "Sorting",
    275: "BinarySearch",
    276: "DynamicProgramming",
    277: "Array",
    278: "BinarySearch",
    279: "DynamicProgramming",
    280: "Array",
    281: "Design",
    282: "Backtracking",
    283: "TwoPointers",
    284: "Design",
    285: "Tree",
    286: "BFS",
    287: "BinarySearch",
    288: "Design",
    289: "Array",
    290: "HashTable",
    291: "Backtracking",
    292: "Math",
    293: "String",
    294: "Backtracking",
    295: "Heap",
    296: "Math",
    297: "Tree",
    298: "Tree",
    299: "HashTable",
    300: "DynamicProgramming",
    
    # 301-400
    301: "BFS",
    302: "BinarySearch",
    303: "Design",
    304: "Design",
    305: "UnionFind",
    306: "Backtracking",
    307: "SegmentTree",
    308: "SegmentTree",
    309: "DynamicProgramming",
    310: "Graph",
    311: "HashTable",
    312: "DynamicProgramming",
    313: "Math",
    314: "HashTable",
    315: "SegmentTree",
    316: "Stack",
    317: "BFS",
    318: "BitManipulation",
    319: "Math",
    320: "Backtracking",
    321: "Greedy",
    322: "DynamicProgramming",
    323: "UnionFind",
    324: "Sorting",
    325: "HashTable",
    326: "Math",
    327: "DivideAndConquer",
    328: "LinkedList",
    329: "DynamicProgramming",
    330: "Greedy",
    331: "Stack",
    332: "Graph",
    333: "Tree",
    334: "Array",
    335: "Math",
    336: "Trie",
    337: "Tree",
    338: "DynamicProgramming",
    339: "DFS",
    340: "SlidingWindow",
    341: "Design",
    342: "BitManipulation",
    343: "Math",
    344: "TwoPointers",
    345: "TwoPointers",
    346: "Design",
    347: "Heap",
    348: "Design",
    349: "HashTable",
    350: "HashTable",
    351: "Backtracking",
    352: "TreeMap",
    353: "Design",
    354: "DynamicProgramming",
    355: "Design",
    356: "HashTable",
    357: "Math",
    358: "Greedy",
    359: "Design",
    360: "Math",
    361: "DynamicProgramming",
    362: "Design",
    363: "DynamicProgramming",
    364: "DFS",
    365: "Math",
    366: "Tree",
    367: "BinarySearch",
    368: "DynamicProgramming",
    369: "LinkedList",
    370: "Array",
    371: "BitManipulation",
    372: "Math",
    373: "Heap",
    374: "BinarySearch",
    375: "DynamicProgramming",
    376: "DynamicProgramming",
    377: "DynamicProgramming",
    378: "BinarySearch",
    379: "Design",
    380: "Design",
    381: "Design",
    382: "Sampling",
    383: "HashTable",
    384: "Math",
    385: "Stack",
    386: "DFS",
    387: "HashTable",
    388: "Stack",
    389: "BitManipulation",
    390: "Math",
    391: "Math",
    392: "TwoPointers",
    393: "BitManipulation",
    394: "Stack",
    395: "DivideAndConquer",
    396: "Math",
    397: "BitManipulation",
    398: "Sampling",
    399: "Graph",
    400: "Math",
    
    # 401-500
    401: "Backtracking",
    402: "Stack",
    403: "DynamicProgramming",
    404: "Tree",
    405: "BitManipulation",
    406: "Greedy",
    407: "BFS",
    408: "String",
    409: "HashTable",
    410: "BinarySearch",
    411: "Backtracking",
    412: "Math",
    413: "DynamicProgramming",
    414: "Array",
    415: "Math",
    416: "DynamicProgramming",
    417: "DFS",
    418: "String",
    419: "Array",
    420: "String",
    421: "Trie",
    422: "String",
    423: "Math",
    424: "SlidingWindow",
    425: "Trie",
    426: "Tree",
    427: "Tree",
    428: "Tree",
    429: "Tree",
    430: "LinkedList",
    431: "Tree",
    432: "Design",
    433: "BFS",
    434: "String",
    435: "Greedy",
    436: "BinarySearch",
    437: "Tree",
    438: "SlidingWindow",
    439: "Stack",
    440: "Math",
    441: "Math",
    442: "Array",
    443: "String",
    444: "Graph",
    445: "LinkedList",
    446: "DynamicProgramming",
    447: "HashTable",
    448: "Array",
    449: "Tree",
    450: "Tree",
    451: "HashTable",
    452: "Greedy",
    453: "Math",
    454: "HashTable",
    455: "Greedy",
    456: "Stack",
    457: "TwoPointers",
    458: "Math",
    459: "String",
    460: "Design",
    461: "BitManipulation",
    462: "Math",
    463: "Array",
    464: "DynamicProgramming",
    465: "DFS",
    466: "DynamicProgramming",
    467: "DynamicProgramming",
    468: "String",
    469: "Math",
    470: "Math",
    471: "DynamicProgramming",
    472: "Trie",
    473: "Backtracking",
    474: "DynamicProgramming",
    475: "BinarySearch",
    476: "BitManipulation",
    477: "BitManipulation",
    478: "Math",
    479: "Math",
    480: "SlidingWindow",
    481: "String",
    482: "String",
    483: "Math",
    484: "Greedy",
    485: "Array",
    486: "DynamicProgramming",
    487: "SlidingWindow",
    488: "DFS",
    489: "DFS",
    490: "BFS",
    491: "Backtracking",
    492: "Math",
    493: "DivideAndConquer",
    494: "DynamicProgramming",
    495: "Array",
    496: "Stack",
    497: "BinarySearch",
    498: "Array",
    499: "BFS",
    500: "HashTable"
}

def organize_files():
    # Get current directory
    current_dir = os.getcwd()
    
    # Pattern to extract problem number from filename
    pattern = r'(\d+)_'
    
    # Get all markdown files
    files = [f for f in os.listdir(current_dir) if f.endswith('.md') and re.match(pattern, f)]
    
    # Group files by data structure
    ds_to_files = defaultdict(list)
    
    for file in files:
        match = re.match(pattern, file)
        if match:
            problem_num = int(match.group(1))
            if problem_num in problem_to_ds:
                ds_type = problem_to_ds[problem_num]
                ds_to_files[ds_type].append(file)
            else:
                print(f"Warning: Problem {problem_num} not found in mapping.")
    
    # Create folders and move files
    for ds_type, file_list in ds_to_files.items():
        # Create folder if it doesn't exist
        folder_path = os.path.join(current_dir, ds_type)
        if not os.path.exists(folder_path):
            os.makedirs(folder_path)
        
        # Move files to appropriate folder
        for file in file_list:
            src_path = os.path.join(current_dir, file)
            dst_path = os.path.join(folder_path, file)
            try:
                shutil.move(src_path, dst_path)
                print(f"Moved {file} to {ds_type}/")
            except Exception as e:
                print(f"Error moving {file}: {e}")
    
    print("File organization complete!")

if __name__ == "__main__":
    organize_files()
